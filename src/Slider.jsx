/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import { useSpring, animated } from "@react-spring/three";
import { easings } from "@react-spring/web";

export function Slider(props) {
  const { nodes, materials } = useGLTF("/fidget_slider.glb");
  const roughnessMap = useTexture("./fidget_roughness_map.png");

  const defaultPositionX = 0.5;

  const meshRef = useRef();

  const [spring, api] = useSpring(() => ({
    position: [0.5, 1.096, 0.669],
    config: { duration: 300, easing: easings.easeInOutBack },
  }));

  const handleClick = e => {
    e.stopPropagation();

    if (meshRef.current) {
      const newPositonX = meshRef.current.position.x === defaultPositionX ? -defaultPositionX : defaultPositionX;
      api.start({ position: [newPositonX, 1.096, 0.669] });
    }
  };

  return (
    <group {...props} dispose={null}>
      <animated.mesh ref={meshRef} geometry={nodes.Cube012.geometry} position={spring.position} onClick={handleClick}>
        <meshStandardMaterial color='#CF0B0E' roughness={0.5} roughnessMap={roughnessMap} />
      </animated.mesh>
    </group>
  );
}

useGLTF.preload("/fidget_slider.glb");
